generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model project {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(50)
  creation_date DateTime?      @db.Timestamp(0)
  finish_date   DateTime?      @db.DateTime(0)
  description   String?        @db.VarChar(500)
  task          task[]
  user_project  user_project[]
}

model tag {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(50)
  task_tag task_tag[]
  user_tag user_tag[]
}

model task {
  id                    Int         @id @default(autoincrement())
  name                  String      @db.VarChar(50)
  creation_date         DateTime?   @db.Timestamp(0)
  finish_date           DateTime?   @db.Date
  project               Int
  description           String?     @db.VarChar(500)
  project_projectTotask project     @relation(fields: [project], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "task_project_null_fk")
  task_tag              task_tag[]
  user_task             user_task[]

  @@index([project], map: "task_project_null_fk")
}

model task_tag {
  id                  Int  @id @default(autoincrement())
  task                Int
  tag                 Int
  tag_tagTotask_tag   tag  @relation(fields: [tag], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "task_tag_tag_null_fk")
  task_taskTotask_tag task @relation(fields: [task], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "task_tag_task_null_fk")

  @@index([tag], map: "task_tag_tag_null_fk")
  @@index([task], map: "task_tag_task_null_fk")
}

model user {
  id                                      Int            @id @default(autoincrement())
  email                                   String         @db.VarChar(50)
  password                                String         @db.VarChar(100)
  username                                String         @db.VarChar(50)
  name                                    String         @db.VarChar(50)
  is_manager                              Boolean
  user_project_userTouser_project_manager user_project[] @relation("userTouser_project_manager")
  user_project_userTouser_project_worker  user_project[] @relation("userTouser_project_worker")
  user_tag                                user_tag[]
  user_task_userTouser_task_manager       user_task[]    @relation("userTouser_task_manager")
  user_task_userTouser_task_worker        user_task[]    @relation("userTouser_task_worker")
}

model user_project {
  worker                          Int
  manager                         Int
  project                         Int
  id                              Int     @id @default(autoincrement())
  project_projectTouser_project   project @relation(fields: [project], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_project_project_null_fk")
  user_userTouser_project_manager user    @relation("userTouser_project_manager", fields: [manager], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_project_user_null_fk")
  user_userTouser_project_worker  user    @relation("userTouser_project_worker", fields: [worker], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_project_worker_fk")

  @@index([project], map: "user_project_project_null_fk")
  @@index([manager], map: "user_project_user_null_fk")
  @@index([worker], map: "user_project_worker_fk")
}

model user_tag {
  user                Int
  tag                 Int
  id                  Int  @id @default(autoincrement())
  tag_tagTouser_tag   tag  @relation(fields: [tag], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_tag_tag_null_fk")
  user_userTouser_tag user @relation(fields: [user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_tag_user_null_fk")

  @@index([user], map: "user_tag_user_null_fk")
  @@index([tag], map: "user_tag_tag_null_fk")
}

model user_task {
  worker                       Int
  manager                      Int
  task                         Int
  id                           Int  @id @default(autoincrement())
  user_userTouser_task_manager user @relation("userTouser_task_manager", fields: [manager], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_task_manager_fk")
  task_taskTouser_task         task @relation(fields: [task], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_task_task_null_fk")
  user_userTouser_task_worker  user @relation("userTouser_task_worker", fields: [worker], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_task_user_null_fk")

  @@index([manager], map: "user_task_manager_fk")
  @@index([task], map: "user_task_task_null_fk")
  @@index([worker], map: "user_task_user_null_fk")
}
